<?php

namespace App\Services;

use App\Models\SendToType;
use App\Services\GenerateReviewUrlService;
use Twilio\Rest\Client;

/**
 * This service is designed to be called to send a single message
 */
class SmsService
{
    // public Client $client;
    protected $genReview;

    public function __construct(GenerateReviewUrlService $gr)
    {
        $this->genReview = $gr;
    }

    /**
     * Contains params for message contents, one or more sendToTypes
     * @param $header: Message header to be displayed first
     * @param $body: Message body to be displayed second
     * @param $sendToTypes: array of kv pairs where values indicate to be sent
     * @param $url: A previously generated and stored shortened url.
     * for reviews, it would be generated by SendReviewText job handler,
     * for campaigns, it would be generated by 
     * 
     * @return json response
     */
    public static function send(string $header, string $body, mixed $sendToTypes, string $url, string $reviewerNo=null)
    {
        try {
            // Get Twilio keys
            $account_id = getenv('TWILIO_SID');
            $auth_tok = getenv('TWILIO_TOKEN');
            $twilio_num = getenv('TWILIO_FROM');

            $client = new Client($account_id, $auth_tok);

            // Handle retrieving #'s from sendToType
            // \Log::info($sendToTypes);

            // if($sendToTypes['Review Invite'])
            if ($sendToTypes === 'Review Invite' && $reviewerNo !== null) {
                $client->messages->create($reviewerNo, [
                    'from' => $twilio_num,
                    'body' => "$header \n $body \n $url" 
                ]);

                return response()->json(['message' => 'Review invite sent!']);
            } else if($sendToTypes === 'Review Invite' && $reviewerNo === null) {
                return response()->json(['error' => 'No recipient phone number provided for reviewer'], 400);
            }

            // (getenv('APP_ENV') === 'local') ? $recipientNos = ["+14352224432"] : self::getRecipients($sendToTypes);
            (getenv('APP_ENV') === 'local') ? $recipientNos = ["+14352224432"] : null;
            if ($recipientNos === null) return;
            
            foreach($recipientNos as $recipientNo)
            {
                \Log::info("in loop");
                $client->messages->create($recipientNo, [
                    'from' => $twilio_num,
                    'body' => $header.'\n\n'.$body.'\n'.$url
                ]);
            }
            

            return response()->json(['message' => 'Successfully sent message']);
        }
        catch (\Exception $e) {
            return response()->json(['error' => $e->getMessage()]);
        }
    }

    /**
     * @param $sendToType, a key for SendToType table/model
     * 
     * @return array of recipient phone no.s to be iterated in send method
     */
    public static function getRecipients(mixed $sendToType) : array
    {
        //
    }



    // public static function create() : Client
    // {
    //     $twilSid = env('TWILIO_SENDER_NO');
    //     $twilToken = env('TWILIO_AUTH_TOKEN');

    //     $client = new Client($twilSid, $twilToken);
    //     return $client;
    // }

    // public static function send(string $recipientNo, mixed $meta) 
    // {
    //     // $recipientNo = env('TWILIO_PHONE_NO');
    //     try 
    //     {
    //         $client->messages->create(
    //             $senderNo,
    //             $meta
    //         );
    //     }
    //     catch (\Exception $e) {
    //         return response()->json(['error' => $e->getMessage(), 400]);
    //     }
        
    // }

    public function get()
    {
        //
    }

    public function read()
    {
        //
    }
}